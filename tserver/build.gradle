plugins {
    id 'java'
    id 'java-library'
    id 'idea'
    id "maven-publish"
    id 'groovy-gradle-plugin'
    id 'org.springframework.boot' version "${SpringBootVersion}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

bootJar.enabled = false
jar.enabled = false

allprojects {
    group = 'io.tn'
    version = '0.0.1-DEV'

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin/" }
        gradlePluginPortal()
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "java-library"
    apply plugin: "idea"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = "${JavaCompileVersion}"
    targetCompatibility = "${JavaSourceVersion}"

    def defaultEncoding = 'UTF-8'
    tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }

    tasks.withType(AbstractCopyTask) {
        setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencyManagement {
        dependencies {
            dependency "io.minio:minio:${MinioVersion}"
            dependency "org.mybatis.spring.boot:mybatis-spring-boot-starter:${MybatisVersion}"
            dependency "org.junit.jupiter:junit-jupiter-api:${JunitVersion}"
            dependency "org.junit.jupiter:junit-jupiter-engine:${JunitVersion}"
            dependency "org.springframework.boot:spring-boot-starter-graphql:${SpringBootGraphQLVersion}"
        }

        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${SpringCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${SpringCloudAlibabaVersion}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${SpringBootVersion}"
        }
    }

    dependencies {
        annotationProcessor('org.springframework.boot:spring-boot-starter-actuator')
        annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
        api 'org.springframework.cloud:spring-cloud-starter-bootstrap'

        annotationProcessor 'org.projectlombok:lombok'
    }


}

wrapper {
    gradleVersion("7.4.2")
}